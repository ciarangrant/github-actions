name: Get PR Release Notes

on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - edited

jobs:
  extract_release_notes:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code (optional)
        uses: actions/checkout@v4

      - name: Extract Release Notes Content Line by Line
        id: extract_notes
        run: |
          PR_BODY="${{ github.event.pull_request.body }}"
          START_MARKER="## release notes" # ignoring case in the string to match
          END_MARKER_PREFIX="### release notes for"
          FULL_RELEASE_NOTES=""
          found_marker=false    

          # Read PR_BODY line by line using process substitution and while loop
          # IFS= read -r line ensures correct line reading, preserving leading/trailing spaces
          while IFS= read -r line; do
            trimmed_line=$(echo "$line" | sed 's/^[[:space:]]*//;s/[[:space:]]*$//;s/\r$//')
            # Convert to lower case so can ignore case on string to match
            trimmed_line=$(echo "$trimmed_line" | tr '[:upper:]' '[:lower:]')
            if [ "$trimmed_line" = "$MARKER" ]; then
              found_marker=true 
              continue
            fi

            if [ "$found_marker" = true ]; then
              if [[ "$trimmed_line" =~ ^"$END_MARKER_PREFIX"(.*)$ ]]; then
                # Found the start of an app-specific section, so stop collecting default notes.
                break # Exit the while loop
              fi
              # Append the current (original, untrimmed) line to FULL_RELEASE_NOTES
              # Use the original 'line' variable here to keep all original whitespace as required
              if [ -z "$FULL_RELEASE_NOTES" ]; then
                FULL_RELEASE_NOTES="$line" 
              else
                FULL_RELEASE_NOTES="$FULL_RELEASE_NOTES"$'\n'"$line" # Subsequent lines
              fi
            fi
          done <<< "$PR_BODY" 

          # Trim preceding and trailing blank lines
          FULL_RELEASE_NOTES=$(echo "$FULL_RELEASE_NOTES" | sed -e '/./,$!d' | sed -e :a -e '/^\n*$/{$d;N;ba}')
          # Check if the release notes are effectively blank eg only contain blank lines
          if ! echo "$FULL_RELEASE_NOTES" | grep -qE '[^[:space:]]'; then
            FULL_RELEASE_NOTES=""
          fi  

          # Check if notes were found at all
          if [ -z "$FULL_RELEASE_NOTES" ]; then
            echo "ERROR: No content found after '## Release Notes', '## Release Notes' not present, or only blank lines."
            FINAL_OUTPUT="" # Ensure it's an empty string if nothing valid was found
            exit 1
          else
            FINAL_OUTPUT="$FULL_RELEASE_NOTES"
          fi

          echo "Extracted Content:"
          echo "$FINAL_OUTPUT"

          # Set the extracted content as a step output
          echo "release_notes_content<<EOF" >> $GITHUB_OUTPUT
          echo "$FINAL_OUTPUT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

          # Also set the extracted content as an env var
          echo "FINAL_OUTPUT<<EOT" >> $GITHUB_ENV 
          echo "$FINAL_OUTPUT" >> $GITHUB_ENV     
          echo "EOT" >> $GITHUB_ENV

      - name: Display Extracted Notes (from step output)
        run: |
          echo "--- Final Release Notes from Output (Line by Line Method) ---"
          echo "${{ steps.extract_notes.outputs.release_notes_content }}"

      - name: Get custom Release Notes
        run: |
          echo "${{ steps.extract_notes.outputs.release_notes_content }}"\
          echo "-------"
          echo "${{ env.FINAL_OUTPUT }}"
          CUSTOM_APPS="app2 app3"
          echo "$CUSTOM_APPS"
          for app_name in $CUSTOM_APPS; do
            echo "Processing app: '$app_name'"
            FULL_APP_HEADING="### Release Notes for ${app_name}"
            if echo "${{ env.FINAL_OUTPUT }}" | grep -qFi "$FULL_APP_HEADING"; then
              echo "  --> VALID: Found custom release notes section for '$app_name' within the scope."
              
            else
              echo "  --> INVALID/NOT_FOUND: No custom release notes section found for '$app_name' within the scope."
            fi
           done
